class Cons[T] {
    head: T;
    tail: Cons[T] | Nil;

    init(head: T, tail: Cons[T] | Nil) {
        this.head = head;
        this.tail = tail;
    }
}

type LinkedList[T] = Cons[T] | Nil;


fun printAll[T](list: LinkedList[T]) {
	if (list != nil) {
        print list.head;
        printAll(list.tail);
    }
}

fun map[In, Out](f: fun(In): Out, list: LinkedList[In]): LinkedList[Out] {
	if (list == nil) return nil;
    return Cons(f(list.head), map(f, list.tail));
}

fun isGreaterThan2(x: Number): Boolean {
    return x > 2;
}

var numbers = Cons(1, Cons(2, Cons(3, nil)));

printAll(map(isGreaterThan2, numbers));
